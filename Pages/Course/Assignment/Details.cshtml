@page
@model RazorPagesMovie.Pages.Course.Assignment.DetailsModel

@{
    ViewData["Title"] = $"Details {Model.Assignment.Title}";
    var IsInstructor = HttpContext.Session.GetString("IsInstructor");
}

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { packages: ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        // Data structure: ['Grade Category', 'Number of Students']
        var data = google.visualization.arrayToDataTable([
            ['Grade Category', 'Number of Students', { role: 'style' }],
            ['A (90-100)', @Model.AGrades, 'color: #4CAF50'], // Green for A
            ['B (80-89)', @Model.BGrades, 'color: #2196F3'], // Blue for B
            ['C (70-79)', @Model.CGrades, 'color: #FFC107'], // Yellow for C
            ['D (60-69)', @Model.DGrades, 'color: #FF9800'], // Orange for D
            ['F (<60)', @Model.FGrades, 'color: #F44336']    // Red for F
        ]);

        var options = {
            title: 'Grade Distribution',
            legend: { position: 'none' },
            hAxis: { title: 'Grade Category' },
            vAxis: { title: 'Number of Students' },
            bar: { groupWidth: '50%' }
        };
        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(data, options);6
    }
</script>

<h1>Details</h1>

<div>
    <h4>Assignment</h4>
    @if (IsInstructor == "False" && Model.CurrentSubmission is Models.Submission)
    {
        double? gradePercentage = (@Model.CurrentSubmission.GradedPoints / @Model.Assignment.MaxPoints) * 100;
        gradePercentage = Math.Truncate(gradePercentage ?? 0 * 100);

        <h5>Grade: @gradePercentage%</h5>
    }
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.MaxPoints)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.MaxPoints)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.DueDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.SubmissionType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.SubmissionType)
        </dd>

        @if (IsInstructor == "False")
        {
            <a asp-page="./Submit" asp-route-AssignmentId="@Model.Assignment.Id" asp-route-CourseId="@Model.Assignment.CourseId">Submit</a>
        }
    </dl>
</div>

@if (IsInstructor == "False")
{
    <h2>Class Grade Distribution</h2>
    <div id="chart_div"></div>
}

<div>
    @if (IsInstructor == "True")
    {
        <a asp-page="Edit" asp-route-id="@Model.Assignment.Id" asp-route-courseId="@Model.Assignment.CourseId">Edit</a>
        <span>|</span>
    }
    <a asp-page="Index" asp-route-courseId="@Model.Assignment.CourseId">Back to List</a>
</div>
