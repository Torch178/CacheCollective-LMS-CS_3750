@page
@model RazorPagesMovie.Pages.Users.IndexModel
@{
    
}

<head>
    <style>
        
    </style>
    
</head>
<body >
    <h1>
        @Html.DisplayFor(model => model.CurrentUser.FirstName) @Html.DisplayFor(model => model.CurrentUser.LastName)
    </h1>
    <!--container start-->
    <div class="container-fluid vh-100 w-100">
        <div class="row justify-content-center align-content-start h-100 gx-3">
            <!----------------------------------------------------------------------------------------------->
            <!--Dashboard Cards-->
            <div class="col-8">
                <!--row-cols-2 sets max number of columns for each row to 2-->
                <div class="row row-cols-2">
                    <!--col col creates a nested container-->
                    @foreach (var course in Model.Course)
                    {
                        <a asp-page="/Course/Details" asp-route-id="@course.CourseId" class="plain-link" >
                            <div class="col col">
                                <!--Card contents-->
                                    <div class="card course" style="width: 18rem;">
                                        <div class="card-body">
                                            <h5 class="card-title">@course.Title</h5>
                                            <h6 class="card-subtitle mb-2 text-muted">@course.Department.ToString() - @course.Number</h6>
                                            <p class="card-text">@course.MeetingDays @course.Location
                                            @(course.StartTime.Hours % 12 == 0 ? 12 : course.StartTime.Hours % 12):@(course.StartTime.Minutes.ToString("D2")) @(course.StartTime.Hours >= 12 ? "PM" : "AM")
                                            -
                                            @(course.EndTime.Hours % 12 == 0 ? 12 : course.EndTime.Hours % 12):@(course.EndTime.Minutes.ToString("D2")) @(course.EndTime.Hours >= 12 ? "PM" : "AM")
                                            </p>
                                        </div>
                                    </div>
                            </div>
                        </a>
                    }
                </div>
            </div>
            <!----------------------------------------------------------------------------------------------->
            <!--To-Do List-->
            <div class="col-4  justify-content-start" id="todo-area">
                <div class="row justify-content-center align-items-center main-row" data-bs-spy="scroll" data-bs-target="#todo-container">
                    <div class="col shadow main-col bg-white">
                            <div class="row bg-primary text-white">
                                <div class="col  p-2">
                                    <h4>To-Do</h4>
                                </div>
                            </div>
                        <!--To-Do Items--->
                        <div class="row" id="todo-container" tabindex="0">
                            @{
                                var courses = Model.Course;
                            }
                            @foreach (var assignment in Model.ToDoList)
                            {
                                //Get course matching Assignment to populate course name into todo item
                                var course = Model.Course.First(e => e.CourseId == assignment.CourseId);

                                //Determine how soon Assignments are coming due by caluclating difference in DateTime
                                var dateDiff = (assignment.DueDate - DateTime.Now).Days ;

                                //assign a border color based on assignment being past-due, due soon, or due later (>7days)
                                string border = "border-default";
                                if (dateDiff < 7 && dateDiff > 0) border = "border-warning";
                                else if (dateDiff <= 0) border = "border-danger";
                                else border = "border-success";

                                //Individual To-Do Item Content
                                <div class="col col-12 p-2 mt-1 mb-1 todo-item " id="@assignment.Id">
                                <a asp-page="/Course/Assignment/Details" asp-route-id="@assignment.Id" class="plain-link">
                                        <div class="input-group object-fit-none m-1 border  @border border-3 rounded">
                                
                                <div class="container w-100 ">
                                                <h6 class="text-wrap">@course.Department @course.Number @course.Title</h6>
                                    <div class="text-wrap">@assignment.Title</div>   
                                    
                                </div>
                                
                                </div>
                                </a>
                                <div class="container w-100">
                                    <div class="text-wrap d-grid float-start align-content-start"><span class="fw-bold text-wrap">Due Date:</span> @assignment.DueDate</div>
                                        <button todo-id="@assignment.Id" class="btn d-flex btn-outline-secondary bg-danger text-white float-end align-content-end" type="button" onclick="DeleteTodo(this);"
                                            id="button-addon2 ">
                                        X
                                    </button>
                                        <hr />
                                </div>
                                    
                                </div>

                                
                                
                            }
                        </div>
                        </div>
                    </div>
            </div>
            <!----------------------------------------------------------------------------------------------->
        </div>
    </div>
</body>